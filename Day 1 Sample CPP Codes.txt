***C++ Syntax, Variables, and Data Types***

Example 1: Basic Variable Declaration and Initialization

#include <iostream>
using namespace std;

int main() {
    int age = 30;
    float height = 5.9;
    char grade = 'A';
    string name = "Lt. Reyes";
    bool isActive = true;

    cout << "Name: " << name << endl;
    cout << "Age: " << age << endl;
    cout << "Height: " << height << " ft" << endl;
    cout << "Performance Grade: " << grade << endl;
    cout << "Active Duty: " << isActive << endl;

    return 0;
}


Example 2: Input and Output with cin and cout

#include <iostream>
using namespace std;

int main() {
    string name;
    int yearsInService;

    cout << "Enter your name: ";
    getline(cin, name);

    cout << "Enter years in service: ";
    cin >> yearsInService;

    cout << "Officer " << name << " has served for " << yearsInService << " years." << endl;

    return 0;
}


Example 3: Combining Data Types in Calculations

#include <iostream>
using namespace std;

int main() {
    float kilometers;
    float nauticalMiles;
    const float KM_TO_NM = 0.539957;

    cout << "Enter distance in kilometers: ";
    cin >> kilometers;

    nauticalMiles = kilometers * KM_TO_NM;

    cout << kilometers << " km is approximately " << nauticalMiles << " nautical miles." << endl;

    return 0;
}

*** C++ Syntax, Variables, and Data Types ***

Example 1: Arithmetic Operators – Ammo Calculation

#include <iostream>
using namespace std;

int main() {
    int ammoBox = 30;
    int boxes = 4;
    int totalAmmo = ammoBox * boxes;

    cout << "Each box has " << ammoBox << " rounds." << endl;
    cout << "Total ammo for " << boxes << " boxes: " << totalAmmo << " rounds." << endl;

    return 0;
}


Example 2: Comparison Operators – Mission Eligibility Check

#include <iostream>
using namespace std;

int main() {
    int age;
    cout << "Enter personnel age: ";
    cin >> age;

    if (age >= 21 && age <= 45) {
        cout << "Eligible for mission deployment." << endl;
    } else {
        cout << "Not eligible for mission deployment." << endl;
    }

    return 0;
}


Example 3: Logical Operators – Access Clearance

#include <iostream>
using namespace std;

int main() {
    string rank;
    bool hasID;

    cout << "Enter your rank (e.g., 'Officer', 'Enlisted'): ";
    cin >> rank;

    cout << "Do you have your access ID? (1 = Yes, 0 = No): ";
    cin >> hasID;

    if ((rank == "Officer" || rank == "Commander") && hasID) {
        cout << "Access granted to restricted area." << endl;
    } else {
        cout << "Access denied." << endl;
    }

    return 0;
}


Example 4: Combined Expressions – Fuel Requirement Calculator

#include <iostream>
using namespace std;

int main() {
    float distanceKm, fuelPerKm, totalFuel;
    
    cout << "Enter mission distance (km): ";
    cin >> distanceKm;

    cout << "Enter fuel consumption per km (liters): ";
    cin >> fuelPerKm;

    totalFuel = distanceKm * fuelPerKm;

    cout << "Total fuel needed: " << totalFuel << " liters" << endl;

    return 0;
}



*** Conditional Statements ***

Example 1: Basic if Statement – Critical Alert

#include <iostream>
using namespace std;

int main() {
    int threatLevel;

    cout << "Enter threat level (1-5): ";
    cin >> threatLevel;

    if (threatLevel >= 4) {
        cout << "⚠️ Critical alert! Activate defense systems." << endl;
    }

    return 0;
}


Example 2: if-else – Patrol Status Check

#include <iostream>
using namespace std;

int main() {
    bool isPatrolActive;

    cout << "Is patrol active? (1 = Yes, 0 = No): ";
    cin >> isPatrolActive;

    if (isPatrolActive) {
        cout << "Patrol is underway. Monitoring in progress." << endl;
    } else {
        cout << "Standby mode. Awaiting orders." << endl;
    }

    return 0;
}


Example 3: if-else-if – Mission Code Interpretation

#include <iostream>
using namespace std;

int main() {
    int missionCode;

    cout << "Enter mission code (1-3): ";
    cin >> missionCode;

    if (missionCode == 1) {
        cout << "Mission: Surveillance Operation" << endl;
    } else if (missionCode == 2) {
        cout << "Mission: Rescue and Recovery" << endl;
    } else if (missionCode == 3) {
        cout << "Mission: Maritime Patrol" << endl;
    } else {
        cout << "Invalid mission code!" << endl;
    }

    return 0;
}


Example 4: switch Statement – Menu-Driven Command Center

#include <iostream>
using namespace std;

int main() {
    int choice;

    cout << "NAVAL COMMAND MENU" << endl;
    cout << "[1] Activate sonar" << endl;
    cout << "[2] Launch drone" << endl;
    cout << "[3] Shut down system" << endl;
    cout << "Select option: ";
    cin >> choice;

    switch (choice) {
        case 1:
            cout << "Sonar system activated." << endl;
            break;
        case 2:
            cout << "Drone launched successfully." << endl;
            break;
        case 3:
            cout << "System shutting down." << endl;
            break;
        default:
            cout << "Invalid option. Try again." << endl;
    }

    return 0;
}


*** Loops: Repetition Structures ***

Example 1: for Loop – Ammo Distribution to Units

#include <iostream>
using namespace std;

int main() {
    int units = 5;
    int ammoPerUnit = 30;

    for (int i = 1; i <= units; i++) {
        cout << "Unit " << i << " assigned " << ammoPerUnit << " rounds." << endl;
    }

    return 0;
}


Example 2: while Loop – Countdown Before Launch

#include <iostream>
using namespace std;

int main() {
    int countdown = 10;

    cout << "Initiating drone launch countdown..." << endl;

    while (countdown > 0) {
        cout << countdown << "..." << endl;
        countdown--;
    }

    cout << "🚀 Drone launched!" << endl;

    return 0;
}


Example 3: do-while Loop – Password Verification System

#include <iostream>
#include <string>
using namespace std;

int main() {
    string password;
    string correctPassword = "navy2025";

    do {
        cout << "Enter password to access secure logs: ";
        cin >> password;

        if (password != correctPassword) {
            cout << "❌ Access Denied. Try again.\n";
        }

    } while (password != correctPassword);

    cout << "✅ Access Granted." << endl;

    return 0;
}


Example 4: Nested Loops – Grid Coordinate Scanner

#include <iostream>
using namespace std;

int main() {
    for (int row = 1; row <= 3; row++) {
        for (int col = 1; col <= 3; col++) {
            cout << "Scanning grid [" << row << "][" << col << "]..." << endl;
        }
    }

    return 0;
}


*** Basic Functions in C++ ***

Example 1: Simple Function with No Parameters

#include <iostream>
using namespace std;

void displayWelcome() {
    cout << "=============================" << endl;
    cout << "  Philippine Navy System" << endl;
    cout << "=============================" << endl;
}

int main() {
    displayWelcome();
    cout << "System initializing..." << endl;
    return 0;
}


Example 2: Function with Parameters (By Value)

#include <iostream>
using namespace std;

void issueAmmo(int soldiers, int roundsPerSoldier) {
    int totalRounds = soldiers * roundsPerSoldier;
    cout << "Issuing " << totalRounds << " rounds for " << soldiers << " soldiers." << endl;
}

int main() {
    issueAmmo(10, 30);
    return 0;
}



Example 3: Function with Return Value

#include <iostream>
using namespace std;

float calculateNauticalMiles(float kilometers) {
    return kilometers * 0.539957;
}

int main() {
    float distanceKm;
    cout << "Enter distance in kilometers: ";
    cin >> distanceKm;

    float result = calculateNauticalMiles(distanceKm);
    cout << "Equivalent distance: " << result << " nautical miles." << endl;

    return 0;
}


Example 4: Function That Calculates Fuel Requirements


#include <iostream>
using namespace std;

float computeFuelRequirement(float distanceKm, float fuelPerKm) {
    return distanceKm * fuelPerKm;
}

int main() {
    float distance, fuelRate;
    cout << "Enter mission distance (km): ";
    cin >> distance;
    cout << "Enter fuel consumption per km: ";
    cin >> fuelRate;

    float fuelNeeded = computeFuelRequirement(distance, fuelRate);
    cout << "Total fuel required: " << fuelNeeded << " liters." << endl;

    return 0;
}



MACHINE PROBLEMS LINK FOR C++ DAY 1 TRAINING

https://drive.google.com/file/d/1F5n5n5pspwh8Ov7D7td3GVk5gAqaM-Ov/view?usp=sharing


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

#include <iostream>
#include <string>

#ifdef _WIN32
#include <conio.h>  // For _getch() on Windows
#else
#include <termios.h>
#include <unistd.h>
#endif

std::string getPassword(const std::string& prompt = "Enter password: ") {
    std::string password;
    char ch;

    std::cout << prompt;

#ifdef _WIN32
    while (true) {
        ch = _getch();
        if (ch == '\r' || ch == '\n') {
            std::cout << std::endl;
            break;
        } else if (ch == '\b') {
            if (!password.empty()) {
                password.pop_back();
                std::cout << "\b \b";
            }
        } else if (ch == 3) { // Ctrl+C
            exit(1);
        } else {
            password += ch;
            std::cout << '*';
        }
    }
#else
    struct termios oldt, newt;
    tcgetattr(STDIN_FILENO, &oldt);
    newt = oldt;
    newt.c_lflag &= ~(ECHO | ICANON);
    tcsetattr(STDIN_FILENO, TCSANOW, &newt);

    while (true) {
        ch = getchar();
        if (ch == '\n' || ch == '\r') {
            std::cout << std::endl;
            break;
        } else if (ch == 127 || ch == 8) {
            if (!password.empty()) {
                password.pop_back();
                std::cout << "\b \b";
            }
        } else if (ch == 3) {
            tcsetattr(STDIN_FILENO, TCSANOW, &oldt);
            exit(1);
        } else {
            password += ch;
            std::cout << '*';
        }
    }

    tcsetattr(STDIN_FILENO, TCSANOW, &oldt);
#endif

    return password;
}

int main() {
    const std::string validUsername = "navy";
    const std::string validPassword = "navy";

    std::string username;
    std::cout << "Enter username: ";
    std::getline(std::cin, username);

    std::string password = getPassword("Enter password: ");

    std::cout << "\nLogin attempt:\n";

    if (username == validUsername && password == validPassword) {
        std::cout << "✅ Access granted. Welcome, " << username << "!\n";
    } else {
        std::cout << "❌ Access denied. Invalid credentials.\n";
    }

    return 0;
}
